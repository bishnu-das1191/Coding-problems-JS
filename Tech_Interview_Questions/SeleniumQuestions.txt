Q. Write a xpath to select a mousehover dropdown value.
Q. Mention the list of items to be in place before proceeding with Regression Test Plan.
- Test Cases
Test Environment: Identify the hardware and software configurations required to run the regression tests, including the version of the app being tested, OS, database, and any other dependencies.
Test Data: 
Test Execution:
Risk Analysis: Identify the risks associated with the regression testing and establish a mitigation plan to manage these risks.
Test Sign-off: Define the criteria for test sign-off and approval, including the metrics and results needed to consider the regression testing successful.
Documentation: Prepare the necessary documentation, including test cases, test data, results, and defect reports.


Q. What is the Hierarchy of Selenium Classess and Interfaces
A -                     
                        SearchContext(I) [findElement(), findElements()]
                              |
                        WebDriver(I) [get(),close(), quit(),getTitle(),getWindowHandle(), getWindowHandles()]
                              |
JavaScriptExecutor(I) <- RemoteWebDriver(C) [Fully Implemented Class] -> TakeScreenshot(I)
                              |
                              |extends
                              |
        ChromeDriver(C)  FirefoxDriver(C) EgdeDriver(C) SafariDriver(C)


Q. The following methods are useful to handle alerts in Selenium:

1. Void dismiss(): This method is used when the ‘Cancel’ button is clicked in the alert box.
driver.switchTo().alert().dismiss();

2. Void accept(): This method is used to click on the ‘OK’ button of the alert.
driver.switchTo().alert().accept();

3. String getText(): This method is used to capture the alert message.
driver.switchTo().alert().getText();

4. Void sendKeys(String stringToSend): This method is used to send data to the alert box.
driver.switchTo().alert().sendKeys("Text");


Q. Explain your Automation Framework?
Framework Explanation : 
-------------------------
My Framework structure was consisting of various components like : Pages, Tests, Reports, Logs, testng.xml, pom.xml, resources, config, utils.

project-name
├── src
│   └── main
│       └── java
│           ├── base
│           │   └── BaseTest.java
│           ├── pages
│           │   ├── LoginPage.java
│           │   └── HomePage.java
│           ├── tests
│           │   ├── LoginTest.java
│           │   └── ... (other test classes)
│           ├── utils
│           │   └── TestUtils.java
│           └── config
│               └── TestConfig.properties
│   └── resources
│       └── chromedriver.exe (or other webdriver)
├── pom.xml (or build.gradle)
├── testng.xml
├── reports
│   └── test-reports
│   └── logs



Explanation of each components in framework:
-------------------------------------------

src/main/java: This directory contains the Java source code.

base/BaseTest.java: This class acts as a base class for all your test classes. It can handle common setup and teardown tasks, such as initializing WebDriver, setting up test environment, and generating reports.

pages: Stores page object classes representing different web pages.

tests: Contains test classes that execute test cases.

utils: Houses utility classes for common tasks (e.g., date-time manipulation, file operations, custom locators).

config: Contains configuration files (e.g., TestConfig.properties) for storing test data, environment variables, and other settings.

resources: Stores external resources like webdriver executables (e.g., chromedriver.exe).

testng.xml: This XML file configures TestNG, specifying test classes, test suites, and other settings.

pom.xml : The project's build configuration file for Maven or Gradle, respectively.

reports: Stores test reports generated by the framework (e.g., HTML reports from TestNG and ExtentReport).

logs: Stores log files for debugging and troubleshooting.

For Report, we had a 3rd party tool called 'ExtentReports' integrated. Maven as build tool.
We had BaseClass to instantiate browser based on the browser name provided from testng.xml file.